apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: coreos-ingress
  namespace: coreos
  labels:
    app.kubernetes.io/name: coreos-ingress
    app.kubernetes.io/part-of: coreos-platform
    app.kubernetes.io/managed-by: terraform
  annotations:
    # Ingress controller configuration
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"

    # TLS/Certificate configuration
    cert-manager.io/cluster-issuer: "letsencrypt-prod"

    # CORS configuration
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"

    # Monitoring configuration
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"

    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";

    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "100"

    # ModSecurity WAF configuration
    nginx.ingress.kubernetes.io/enable-modsecurity: "true"
    nginx.ingress.kubernetes.io/modsecurity-snippet: |
      SecRuleEngine On
      SecRequestBodyAccess On

spec:
  tls:
    - hosts:
        - coreos.example.com
      secretName: coreos-tls
  rules:
    - host: coreos.example.com
      http:
        paths:
          - path: /api
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  name: http
          - path: /
            pathType: Prefix
            backend:
              service:
                name: web-service
                port:
                  name: http