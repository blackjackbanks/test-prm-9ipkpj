# A generic, single database configuration.

[alembic]
# path to migration scripts
script_location = src/data/migrations

# template used to generate migration files
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d%%(second).2d_%%(rev)s_%%(slug)s

# timezone to use when rendering the date within the migration file
timezone = UTC

# max length of characters to apply to the "slug" field
truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
revision_environment = true

# set to 'false' to not deploy .pyc files for migrations
sourceless = false

# set to 'true' to enforce running migrations in a transaction
transaction_per_migration = true

# Async PostgreSQL connection URL with environment variable interpolation
sqlalchemy.url = postgresql+asyncpg://%(DB_USER)s:%(DB_PASSWORD)s@%(DB_HOST)s:%(DB_PORT)s/%(DB_NAME)s

# location of version scripts
version_locations = %(here)s/versions

# compare_type compares column types in migrations
compare_type = true

# compare_server_default compares server defaults in migrations
compare_server_default = true

[loggers]
keys = root,sqlalchemy,alembic,asyncpg

[handlers]
keys = console,file,syslog

[formatters]
keys = generic,json

[logger_root]
level = WARN
handlers = console,file
qualname = 
propagate = 0

[logger_sqlalchemy]
level = WARN
handlers = console,file
qualname = sqlalchemy.engine
propagate = 0

[logger_alembic]
level = INFO
handlers = console,file,syslog
qualname = alembic
propagate = 0

[logger_asyncpg]
level = INFO
handlers = console,file
qualname = asyncpg
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_file]
class = FileHandler
args = ('alembic.log', 'a')
level = NOTSET
formatter = json

[handler_syslog]
class = SysLogHandler
args = ('/dev/log', 'local7')
level = NOTSET
formatter = json

[formatter_generic]
format = %(asctime)s %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %Y-%m-%d %H:%M:%S

[formatter_json]
format = {'time':'%(asctime)s', 'name': '%(name)s', 'level': '%(levelname)s', 'message': '%(message)s'}