[pytest]
# Minimum pytest version requirement
minversion = 7.0.0

# Test discovery paths and patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Command line options including coverage requirements
addopts = -ra -q --strict-markers --cov=src --cov-report=term-missing --cov-report=html --cov-fail-under=80

# Logging configuration
log_cli = true
log_cli_level = INFO

# Asyncio configuration
asyncio_mode = auto

# Cache directory
cache_dir = .pytest_cache

# JUnit configuration for CI integration
junit_family = xunit2

# Warning filters
filterwarnings = 
    ignore::DeprecationWarning

# Test markers
markers = 
    unit: Unit tests that verify individual components in isolation
    integration: Integration tests that verify component interactions
    e2e: End-to-end tests that verify complete system flows
    asyncio: Tests that require asyncio event loop
    slow: Tests that take longer than 1 second to execute
    api: Tests that verify API endpoints and responses
    data: Tests for data models and database operations
    security: Tests focused on security features and requirements

# Test collection configuration
norecursedirs = 
    .git
    .pytest_cache
    .coverage
    htmlcov
    dist
    build
    __pycache__

# Coverage configuration
[coverage:run]
branch = True
source = src

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise NotImplementedError
    if __name__ == "__main__":
    pass
    raise ImportError

[coverage:html]
directory = htmlcov